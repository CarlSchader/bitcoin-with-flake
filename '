{
  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    flake-utils.url = "github:numtide/flake-utils";
  };
  outputs = { nixpkgs, flake-utils, ... }:
    flake-utils.lib.eachDefaultSystem (system:
      let
        pkgs = import nixpkgs {
          inherit system;
        };
        dependencies = with pkgs; [
          cmake
          clang
          libevent
          glibc
          sqlite
          boost
          pkg-config
        ];
      in
      {
        packages.default = pkgs.stdenv.mkDerivation {
          pname = "my-project";
          version = "1.0.0";

          src = ./.;

          nativeBuildInputs = [
            pkgs.cmake
            pkgs.pkg-config
          ];

          buildInputs = dependencies;

          cmakeFlags = [
            "-DCMAKE_BUILD_TYPE=Release"
            "-DCMAKE_INSTALL_PREFIX=${pkgs.lib.getBin pkgs}"
          ];

          meta = with pkgs.lib; {
            description = "A sample project using Nix flakes";
            license = licenses.mit;
            maintainers = with maintainers; [ ];
            platforms = platforms.all;
          };
        };

        devShells.default = pkgs.mkShell {
          buildInputs = dependencies;
          shellHook = ''
            export LD_LIBRARY_PATH=LD_LIBRARY_PATH:${pkgs.lib.makeLibraryPath dependencies}
          '';
        };
      });
}
